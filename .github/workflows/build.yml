name: Compilar Api
on:
  push:
    branches:
      - "main"
      - "test"
      - "dev"
jobs:
  build:
    runs-on: 'ubuntu-latest'
    env:
      solution: Api
      version: 1.0.${{ github.run_number }}
      versionSuffix: ${{ github.ref_name }}
      username: leandrobaena@gmail.com

    steps:

    - name: Setup Java 17
      uses: actions/setup-java@v3.13.0
      with:
        java-version: 17
        distribution: oracle
    
    - name: Descarga del código
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Cache de paquetes SonarCloud
      uses: actions/cache@v3
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache de scanner SonarCloud
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    
    - name: Instalar scanner SonarCloud
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: 'dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner'
      
    - name: Inicializar SonarQube
      run: ./.sonar/scanner/dotnet-sonarscanner begin /k:"Implantdent_api" /o:"implantdent" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml

    - name: Adicionar repositorio
      run: dotnet nuget add source --username ${{ env.username }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/implantdent/index.json"

    - name: Compilar la solución
      run: dotnet build ${{ env.solution }}.sln -c Debug

    - name: Ejecutar pruebas unitarias
      run: |
        dotnet tool install --global dotnet-coverage
        dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"

    - name: Finalizar SonarQube
      run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    - name: Conectar al repositorio de imágenes
      run: docker login ghcr.io -u ${{ env.username }} -p ${{ secrets.GITHUB_TOKEN }}

    - name: Construir imagen Docker
      if: ${{ github.ref_name == 'dev' || github.ref_name == 'qa' }}
      run: docker build ${{ env.solution }} -t ghcr.io/implantdent/api:${{ env.version }}-${{ env.versionSuffix }} -t ghcr.io/implantdent/api:${{ github.ref_name }}-${{ env.versionSuffix }} --build-arg CONFIG=Debug

    - name: Construir imagen Docker
      if: ${{ github.ref_name == 'main' }}
      run: docker build ${{ env.solution }} -t ghcr.io/implantdent/api:${{ env.version }} -t ghcr.io/implantdent/api:latest --build-arg CONFIG=Release

    - name: Publicar imagen Docker
      run: docker push -a ghcr.io/implantdent/api

  deploy:
    if: ${{ github.ref_name == 'main' }}
    needs: build
    runs-on: 'ubuntu-latest'
    env:
      solution: Api
      version: 1.0.${{ github.run_number }}
      username: leandrobaena@gmail.com

    steps:
    - name: Reemplazar variables dev
      uses: prabhakarareddygaddam-mcd/replace-action@1.0.0
      with:
        files: ${{ env.solution }}\deploy.yml
        replacements: --version--=${{ env.version }}

    - name: Desplegar en Kubernetes
      run: kubectl apply -f ${{ github.workspace }}\${{ env.solution }}\deploy.yml